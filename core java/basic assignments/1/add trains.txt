import { OnInit } from '@angular/core';
import { Component } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Observable } from 'rxjs';
import { Depart } from './depart';
import { DepartserviceService } from './departservice.service';
import { ReservationType } from './reservation-type';
import{FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';


@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent implements OnInit {
  employees!: Observable<Depart[]>;
  emp:Depart[]=[];
 



    title = 'springconnection';
    registrationform!: FormGroup;
  constructor(private route: ActivatedRoute,private router: Router,
    private e: DepartserviceService,private fb:FormBuilder) { 
   


      this.registrationform=this.fb.group({
        trainno:[''],
      trainname:[''],
      source:[''],
      destination:[''],
      date:[''],
      startTime:[''],
      reservationvacancy:this.fb.array([
        this.fb.group({
          type:'',
          reservations:'',
          fare:''
        })
      ])
      });
    }


    get vacancy() : FormArray {
      return this.registrationform.get("reservationvacancy") as FormArray
    }
     

    addvacanyc() {
       this.vacancy.push(this.newvacancy());
    }
 
   
     
    newvacancy(): FormGroup {
       return this.fb.group({
         type: '',
         reservations: '',
         fare:''
  
       })
    }
     
emp9:any;


    ngOnInit() {
      this.e.getBooks().subscribe(
        response =>{this.employees = response;
        this.emp=response;
  }
       );
   console.log(typeof(this.emp));
    }
    deleteEmployee(id:any) {
   
      this.e.deleteEmployee(id)
        .subscribe(
          data => {
            console.log(data);
            this.emp = this.emp.filter(u => u !== data);
          },
          error => console.log(error));
    }
    getemp(id:any) {
      this.e.getBooksbbyid(id)
      .subscribe(data => {
      
      }, error => console.log(error));
    }

onsubmit()
{

  console.log();

this.e.addEmployee(this.registrationform.value)
.subscribe( response=>console.log('Success',response),
error=>console.log('Error',error)
 
);
}
}
    
  

